- name: Check if proxmoxadmin@pve already exists
  uri:
    url: "https://{{ proxmox_host }}:8006/api2/json/access/users"
    method: GET
    headers:
      Authorization: "PVEAPIToken={{ proxmox_admin_user }}!{{ proxmox_token_id }}={{ proxmox_token_secret }}"
    return_content: yes
    validate_certs: no
  register: user_list
  delegate_to: localhost

- name: Create Proxmox API user proxmoxadmin@pve
  uri:
    url: "https://{{ proxmox_host }}:8006/api2/json/access/users"
    method: POST
    body_format: json
    headers:
      Authorization: "PVEAPIToken={{ proxmox_admin_user }}!{{ proxmox_token_id }}={{ proxmox_token_secret }}"
    body:
      userid: "proxmoxadmin@pve"
      comment: "Automation user"
    status_code: [200, 400]
    validate_certs: no
  when: "'proxmoxadmin@pve' not in user_list.json.data | map(attribute='userid') | list"
  delegate_to: localhost

- name: Assign PVEVMAdmin to proxmoxadmin@pve on /vms
  uri:
    url: "https://{{ proxmox_host }}:8006/api2/json/access/acl"
    method: PUT
    body_format: json
    headers:
      Authorization: "PVEAPIToken={{ proxmox_admin_user }}!{{ proxmox_token_id }}={{ proxmox_token_secret }}"
    body:
      path: "/vms"
      users: "proxmoxadmin@pve"
      roles: "PVEVMAdmin"
    status_code: [200, 400]
    validate_certs: no
  delegate_to: localhost

- name: Assign PVEDatastoreUser to proxmoxadmin@pve on /storage/local
  uri:
    url: "https://{{ proxmox_host }}:8006/api2/json/access/acl"
    method: PUT
    body_format: json
    headers:
      Authorization: "PVEAPIToken={{ proxmox_admin_user }}!{{ proxmox_token_id }}={{ proxmox_token_secret }}"
    body:
      path: "/storage/local"
      users: "proxmoxadmin@pve"
      roles: "PVEDatastoreUser"
    status_code: [200, 400]
    validate_certs: no
  delegate_to: localhost

- name: Create API token 'automation' for proxmoxadmin@pve
  uri:
    url: "https://{{ proxmox_host }}:8006/api2/json/access/users/proxmoxadmin@pve/token/automation"
    method: POST
    body_format: json
    headers:
      Authorization: "PVEAPIToken={{ proxmox_admin_user }}!{{ proxmox_token_id }}={{ proxmox_token_secret }}"
    body:
      comment: "Scoped token for automation"
      privsep: 0
    status_code: [200, 400]
    validate_certs: no
  register: token_creation
  delegate_to: localhost

- name: Save Proxmox token for proxmoxadmin locally
  copy:
    content: "{{ token_creation.json.data }}"
    dest: "./proxmoxadmin_token.json"
    mode: "0600"
  delegate_to: localhost
